# Your version: 0.6.0 Latest version: 0.7.0
# Generated by Neurodocker version 0.6.0
# Timestamp: 2021-09-20 12:30:34 UTC
# 
# Thank you for using Neurodocker. If you discover any issues
# or ways to improve this software, please submit an issue or
# pull request on our GitHub repository:
# 
#     https://github.com/kaczmarj/neurodocker

FROM neurodebian:stretch-non-free

ARG DEBIAN_FRONTEND="noninteractive"

ENV LANG="en_US.UTF-8" \
    LC_ALL="en_US.UTF-8" \
    ND_ENTRYPOINT="/neurodocker/startup.sh"
RUN export ND_ENTRYPOINT="/neurodocker/startup.sh" \
    && apt-get update -qq \
    && apt-get install -y -q --no-install-recommends \
           apt-utils \
           bzip2 \
           ca-certificates \
           curl \
           locales \
           unzip \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* \
    && sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen \
    && dpkg-reconfigure --frontend=noninteractive locales \
    && update-locale LANG="en_US.UTF-8" \
    && chmod 777 /opt && chmod a+s /opt \
    && mkdir -p /neurodocker \
    && if [ ! -f "$ND_ENTRYPOINT" ]; then \
         echo '#!/usr/bin/env bash' >> "$ND_ENTRYPOINT" \
    &&   echo 'set -e' >> "$ND_ENTRYPOINT" \
    &&   echo 'export USER="${USER:=`whoami`}"' >> "$ND_ENTRYPOINT" \
    &&   echo 'if [ -n "$1" ]; then "$@"; else /usr/bin/env bash; fi' >> "$ND_ENTRYPOINT"; \
    fi \
    && chmod -R 777 /neurodocker && chmod a+s /neurodocker

ENTRYPOINT ["/neurodocker/startup.sh"]

RUN apt-get update -qq \
    && apt-get install -y -q --no-install-recommends \
           git \
           num-utils \
           gcc \
           g++ \
           curl \
           build-essential \
           nano \
           graphviz \
           tree \
           git-annex-standalone \
           emacs-nox \
           nano \
           less \
           ncdu \
           tig \
           git-annex-remote-rclone \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

RUN test "$(getent passwd ml_dl_synage)" || useradd --no-user-group --create-home --shell /bin/bash ml_dl_synage
USER ml_dl_synage

ENV CONDA_DIR="/opt/miniconda-latest" \
    PATH="/opt/miniconda-latest/bin:$PATH"
RUN export PATH="/opt/miniconda-latest/bin:$PATH" \
    && echo "Downloading Miniconda installer ..." \
    && conda_installer="/tmp/miniconda.sh" \
    && curl -fsSL --retry 5 -o "$conda_installer" https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh \
    && bash "$conda_installer" -b -p /opt/miniconda-latest \
    && rm -f "$conda_installer" \
    && conda update -yq -nbase conda \
    && conda config --system --prepend channels conda-forge \
    && conda config --system --set auto_update_conda false \
    && conda config --system --set show_channel_urls true \
    && sync && conda clean --all && sync \
    && conda create -y -q --name ml_dl_synage \
    && conda install -y -q --name ml_dl_synage \
           "python=3.6" \
           "numpy" \
           "scipy" \
           "nilearn" \
           "nibabel" \
           "pandas" \
           "nb_conda" \
           "nb_conda_kernels" \
           "nbconvert" \
           "nbformat" \
           "jupyter" \
           "jupyterlab" \
    && sync && conda clean --all && sync \
    && bash -c "source activate ml_dl_synage \
    &&   pip install --no-cache-dir  \
             "seaborn" \
             "tensorflow" \
             "scikit-image" \
             "scikit-learn" \
             "keras" \
             "tensorboard" \
             "myst-nb" \
             "jupytext" \
             "ghp-import" \
             "jupyter-book==0.11.3" \
             "pillow" \
             "graphviz" \
             "pyglet" \
             "nobrainer" \
             "plotly" \
             "sphinx-book-theme" \
             "jupyter_contrib_nbextensions" \
             "RISE" \
             "statsmodels" \
             "pingouin" \
             "vtk" \
             "datalad[full]" \
             "nbval"" \
    && rm -rf ~/.cache/pip/* \
    && sync \
    && sed -i '$isource activate ml_dl_synage' $ND_ENTRYPOINT

ENV LD_LIBRARY_PATH="/opt/miniconda-latest/envs/ml_dl_synage:"

RUN bash -c 'source activate ml_dl_synage && jupyter nbextension enable rise/main && jupyter nbextension enable spellchecker/main'

USER root

RUN mkdir /data && chmod 777 /data && chmod a+s /data

RUN mkdir /output && chmod 777 /output && chmod a+s /output

USER ml_dl_synage

RUN printf "[user]\n\tname = peerherholz\n\temail = herholz.peer@gmail.com\n" > ~/.gitconfig

RUN bash -c 'source activate ml_dl_synage && cd /data && datalad install -r ///workshops/nih-2017/ds000114 && cd ds000114 && datalad update -r && datalad get -r sub-01/ses-test/anat sub-01/ses-test/func/*fingerfootlips*'

RUN curl -L https://files.osf.io/v1/resources/fvuh8/providers/osfstorage/580705089ad5a101f17944a9 -o /data/ds000114/derivatives/fmriprep/mni_icbm152_nlin_asym_09c.tar.gz && tar xf /data/ds000114/derivatives/fmriprep/mni_icbm152_nlin_asym_09c.tar.gz -C /data/ds000114/derivatives/fmriprep/. && rm /data/ds000114/derivatives/fmriprep/mni_icbm152_nlin_asym_09c.tar.gz && find /data/ds000114/derivatives/fmriprep/mni_icbm152_nlin_asym_09c -type f -not -name ?mm_T1.nii.gz -not -name ?mm_brainmask.nii.gz -not -name ?mm_tpm*.nii.gz -delete

COPY [".", "/home/ml_dl_synage"]

USER root

RUN chown -R ml_dl_synage /home/ml_dl_synage/lecture

RUN rm -rf /opt/conda/pkgs/*

USER ml_dl_synage

RUN mkdir -p ~/.jupyter && echo c.NotebookApp.ip = \"0.0.0.0\" > ~/.jupyter/jupyter_notebook_config.py

WORKDIR /home/ml_dl_synage/lecture

CMD ["jupyter", "notebook",  "--port=8889", "--no-browser", "--ip=0.0.0.0"]

RUN echo '{ \
    \n  "pkg_manager": "apt", \
    \n  "instructions": [ \
    \n    [ \
    \n      "base", \
    \n      "neurodebian:stretch-non-free" \
    \n    ], \
    \n    [ \
    \n      "install", \
    \n      [ \
    \n        "git", \
    \n        "num-utils", \
    \n        "gcc", \
    \n        "g++", \
    \n        "curl", \
    \n        "build-essential", \
    \n        "nano", \
    \n        "graphviz", \
    \n        "tree", \
    \n        "git-annex-standalone", \
    \n        "emacs-nox", \
    \n        "nano", \
    \n        "less", \
    \n        "ncdu", \
    \n        "tig", \
    \n        "git-annex-remote-rclone" \
    \n      ] \
    \n    ], \
    \n    [ \
    \n      "user", \
    \n      "ml_dl_synage" \
    \n    ], \
    \n    [ \
    \n      "miniconda", \
    \n      { \
    \n        "conda_install": [ \
    \n          "python=3.6", \
    \n          "numpy", \
    \n          "scipy", \
    \n          "nilearn", \
    \n          "nibabel", \
    \n          "pandas", \
    \n          "nb_conda", \
    \n          "nb_conda_kernels", \
    \n          "nbconvert", \
    \n          "nbformat", \
    \n          "jupyter", \
    \n          "jupyterlab" \
    \n        ], \
    \n        "pip_install": [ \
    \n          "seaborn", \
    \n          "tensorflow", \
    \n          "scikit-image", \
    \n          "scikit-learn", \
    \n          "keras", \
    \n          "tensorboard", \
    \n          "myst-nb", \
    \n          "jupytext", \
    \n          "ghp-import", \
    \n          "jupyter-book==0.11.3", \
    \n          "pillow", \
    \n          "graphviz", \
    \n          "pyglet", \
    \n          "nobrainer", \
    \n          "plotly", \
    \n          "sphinx-book-theme", \
    \n          "jupyter_contrib_nbextensions", \
    \n          "RISE", \
    \n          "statsmodels", \
    \n          "pingouin", \
    \n          "vtk", \
    \n          "datalad[full]", \
    \n          "nbval" \
    \n        ], \
    \n        "create_env": "ml_dl_synage", \
    \n        "activate": true \
    \n      } \
    \n    ], \
    \n    [ \
    \n      "env", \
    \n      { \
    \n        "LD_LIBRARY_PATH": "/opt/miniconda-latest/envs/ml_dl_synage:" \
    \n      } \
    \n    ], \
    \n    [ \
    \n      "run_bash", \
    \n      "source activate ml_dl_synage && jupyter nbextension enable rise/main && jupyter nbextension enable spellchecker/main" \
    \n    ], \
    \n    [ \
    \n      "user", \
    \n      "root" \
    \n    ], \
    \n    [ \
    \n      "run", \
    \n      "mkdir /data && chmod 777 /data && chmod a+s /data" \
    \n    ], \
    \n    [ \
    \n      "run", \
    \n      "mkdir /output && chmod 777 /output && chmod a+s /output" \
    \n    ], \
    \n    [ \
    \n      "user", \
    \n      "ml_dl_synage" \
    \n    ], \
    \n    [ \
    \n      "run", \
    \n      "printf \"[user]\\\n\\tname = peerherholz\\\n\\temail = herholz.peer@gmail.com\\\n\" > ~/.gitconfig" \
    \n    ], \
    \n    [ \
    \n      "run_bash", \
    \n      "source activate ml_dl_synage && cd /data && datalad install -r ///workshops/nih-2017/ds000114 && cd ds000114 && datalad update -r && datalad get -r sub-01/ses-test/anat sub-01/ses-test/func/*fingerfootlips*" \
    \n    ], \
    \n    [ \
    \n      "run", \
    \n      "curl -L https://files.osf.io/v1/resources/fvuh8/providers/osfstorage/580705089ad5a101f17944a9 -o /data/ds000114/derivatives/fmriprep/mni_icbm152_nlin_asym_09c.tar.gz && tar xf /data/ds000114/derivatives/fmriprep/mni_icbm152_nlin_asym_09c.tar.gz -C /data/ds000114/derivatives/fmriprep/. && rm /data/ds000114/derivatives/fmriprep/mni_icbm152_nlin_asym_09c.tar.gz && find /data/ds000114/derivatives/fmriprep/mni_icbm152_nlin_asym_09c -type f -not -name ?mm_T1.nii.gz -not -name ?mm_brainmask.nii.gz -not -name ?mm_tpm*.nii.gz -delete" \
    \n    ], \
    \n    [ \
    \n      "copy", \
    \n      [ \
    \n        ".", \
    \n        "/home/ml_dl_synage" \
    \n      ] \
    \n    ], \
    \n    [ \
    \n      "user", \
    \n      "root" \
    \n    ], \
    \n    [ \
    \n      "run", \
    \n      "chown -R ml_dl_synage /home/ml_dl_synage/lecture" \
    \n    ], \
    \n    [ \
    \n      "run", \
    \n      "rm -rf /opt/conda/pkgs/*" \
    \n    ], \
    \n    [ \
    \n      "user", \
    \n      "ml_dl_synage" \
    \n    ], \
    \n    [ \
    \n      "run", \
    \n      "mkdir -p ~/.jupyter && echo c.NotebookApp.ip = \\\"0.0.0.0\\\" > ~/.jupyter/jupyter_notebook_config.py" \
    \n    ], \
    \n    [ \
    \n      "workdir", \
    \n      "/home/ml_dl_synage/lecture" \
    \n    ], \
    \n    [ \
    \n      "cmd", \
    \n      [ \
    \n        "jupyter-notebook --port=8888 --no-browser --ip=0.0.0.0" \
    \n      ] \
    \n    ] \
    \n  ] \
    \n}' > /neurodocker/neurodocker_specs.json
